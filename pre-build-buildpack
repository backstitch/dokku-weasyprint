#!/usr/bin/env bash

set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
APP="$1"; IMAGE="dokku/$APP"
echo "-----> Installing weasyprint ..."
COMMAND=$(cat <<EOF
echo "-----> upgrade openssl"
wget https://www.openssl.org/source/openssl-1.1.1f.tar.gz
tar xzvf openssl-1.1.1f.tar.gz
cd openssl-1.1.1f
./config -Wl,--enable-new-dtags,-rpath,'$(LIBRPATH)'
make
make install

grep -v "deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main" /etc/apt/sources.list > temp.txt; mv temp.txt /etc/apt/sources.list

echo "-----> install requirements"

export DEBIAN_FRONTEND=noninteractive
apt-get -y update
apt-get install -y build-essential zlib1g-dev python3-dev python3-pip python3-setuptools python3-wheel python3-cffi libcairo2 libpango-1.0-0 libpangocairo-1.0-0 libgdk-pixbuf2.0-0 libffi-dev shared-mime-info
echo "-----> install python3.7"

wget https://www.python.org/ftp/python/3.7.2/Python-3.7.2.tgz
tar -xvf Python-3.7.2.tgz
cd Python-3.7.2
./configure --enable-optimizations
make altinstall
python3.7 -V
echo "-----> pip install certifi"
pip3.7 install certifi
cp /usr/local/lib/python3.7/site-packages/certifi/cacert.pem /usr/local/ssl/cert.pem

echo "-----> upgraded cairo"
rm /usr/lib/x86_64-linux-gnu/libcairo* &&
wget -c https://cairographics.org/releases/cairo-1.16.0.tar.xz &&
tar -xJf cairo-1.16.0.tar.xz && rm cairo-1.16.0.tar.xz
cd cairo-1.16.0/
./configure && make && make install &&
cp /usr/local/lib/libcairo* /usr/lib/x86_64-linux-gnu/

echo "-----> pip install weasyprint"
pip3.7 install weasyprint
echo "-----> pip install cairocffi"
pip3.7 install cairocffi
echo "-----> weasyprint installed!"
weasyprint --version
sleep 1 # wait so that docker run has not exited before docker attach
EOF
)
id=$(docker run -d $IMAGE /bin/bash -e -c "$COMMAND")
#enable logs
docker attach $id
test $(docker wait $id) -eq 0
docker commit $id $IMAGE > /dev/null
